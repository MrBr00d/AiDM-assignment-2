m1 <- lm(Flower_mass ~ Treatment + Cultivar, data = DATA)
qqPlot(m$residuals) # normaal
qqPlot(m1$residuals) # normaal
shapiro.test(m$residuals) # normaal
shapiro.test(m1$residuals) # normaal
ncvTest(m) # constant
ncvTest(m1) # bijna niet
m_aov <- aov(m)
m1_aov <- aov(m1)
summary(m)
summary(m1)
ggplot(DATA, aes(x = Cultivar , y = Weight_plant, fill = Treatment)) +
geom_boxplot()
m <- lm(Weight_plant ~ Treatment * Cultivar, data = DATA)
m1 <- lm(Weight_plant ~ Treatment + Cultivar, data = DATA)
qqPlot(m$residuals) # normaal
qqPlot(m1$residuals) # normaal
shapiro.test(m$residuals) # normaal
shapiro.test(m1$residuals) # normaal
ncvTest(m) # constant
ncvTest(m1) # bijna niet
knitr::opts_chunk$set(echo = TRUE)
# Preparation of the data
Fly <- read.delim("C:\Users\Nick\Desktop\GLS_Lecture_Full\GLS_Lecture_Full\partridge.txt")
# Preparation of the data
Fly <- read.delim("C:\\Users\Nick\Desktop\GLS_Lecture_Full\GLS_Lecture_Full\partridge.txt")
# Preparation of the data
Fly <- read.delim("C:\\Users\\Nick\\Desktop\\GLS_Lecture_Full\\GLS_Lecture_Full\\partridge.txt")
View(Fly)
str(fly)
str(Fly)
Fly$Treatm<-factor(Fly$TREATMEN,
labels=c("Treatm 1","Treatm 2","Treatm 3",
"Treatm 4","Treatm 5"))
str(Fly)
ggplot(Fly, aes(THORAX, LONGEV, colour = Treatm)) +
geom_smooth(method = "lm", se = F, fullrange =T) +
geom_point(alpha = 0.5) +
theme_bw() + ylab("Longevity in Days") +
xlab("Thorax lenght in cm") +
ggtitle("Fruitfly longevity data")
pkgs <- c("tidyverse")
for (i in pkgs){
if (i %in% installed.packages() == FALSE){
install.packages(i)
}
library(i, character.only = TRUE)
}
# Preparation of the data
Fly <- read.delim("C:\\Users\\Nick\\Desktop\\GLS_Lecture_Full\\GLS_Lecture_Full\\partridge.txt") # read in the data
Fly$Treatm<-factor(Fly$TREATMEN,
labels=c("Treatm 1","Treatm 2","Treatm 3",
"Treatm 4","Treatm 5")) # create new col with treatm1-5 for TREATMENT1-5
str(Fly)
ggplot(Fly, aes(THORAX, LONGEV, colour = Treatm)) +
geom_smooth(method = "lm", se = F, fullrange =T) +
geom_point(alpha = 0.5) +
theme_bw() + ylab("Longevity in Days") +
xlab("Thorax lenght in cm") +
ggtitle("Fruitfly longevity data")
ggplot(Fly, aes(THORAX, LONGEV, colour = Treatm)) +
geom_smooth(method = "lm", formula = 'y ~ x', se = F, fullrange =T) +
geom_point(alpha = 0.5) +
theme_bw() +
ylab("Longevity in Days") +
xlab("Thorax lenght in cm") +
ggtitle("Fruitfly longevity data") +
facet_wrap(Fly$Treatm, ncol = 2)
ggplot(Fly, aes(THORAX, LONGEV, colour = Treatm)) +
geom_smooth(method = "lm") +
geom_point(alpha = 0.5) +
theme_bw() +
ylab("Longevity in Days") +
xlab("Thorax lenght in cm") +
ggtitle("Fruitfly longevity data") +
facet_wrap(Fly$Treatm, ncol = 2)
ggplot(Fly, aes(THORAX, LONGEV, colour = Treatm)) +
geom_smooth(method = "lm") +
geom_point() +
theme_bw() +
ylab("Longevity in Days") +
xlab("Thorax lenght in cm") +
ggtitle("Fruitfly longevity data") +
facet_wrap(Fly$Treatm, ncol = 2)
ggplot(Fly, aes(THORAX, LONGEV, colour = Treatm)) +
geom_smooth(method = "lm") +
geom_point() +
#theme_bw() +
ylab("Longevity in Days") +
xlab("Thorax lenght in cm") +
ggtitle("Fruitfly longevity data") +
facet_wrap(Fly$Treatm, ncol = 2)
ggplot(Fly, aes(THORAX, LONGEV, colour = Treatm)) +
geom_smooth(method = "lm") +
geom_point() +
theme_bw() +
ylab("Longevity in Days") +
xlab("Thorax lenght in cm") +
ggtitle("Fruitfly longevity data") +
facet_wrap(Fly$Treatm, ncol = 3)
ggplot(Fly, aes(THORAX, LONGEV, colour = Treatm)) +
geom_smooth(method = "lm") +
geom_point() +
theme_bw() +
ylab("Longevity in Days") +
xlab("Thorax lenght in cm") +
ggtitle("Fruitfly longevity data")
ggplot(Fly, aes(THORAX, LONGEV, colour = Treatm)) +
geom_smooth(method = "lm") +
geom_point() +
theme_bw() +
ylab("Longevity in Days") +
xlab("Thorax lenght in cm") +
ggtitle("Fruitfly longevity data") +
facet_wrap(Fly$Treatm, ncol = 2)
ggplot(Fly, aes(THORAX, LONGEV, colour = Treatm)) +
geom_smooth(method = "lm") +
geom_point() +
theme_bw() +
ylab("Longevity in Days") +
xlab("Thorax lenght in cm") +
ggtitle("Fruitfly longevity data") +
facet_wrap(Fly$Treatm, ncol = 2)
pkgs <- c("tidyverse", "car")
for (i in pkgs){
if (i %in% installed.packages() == FALSE){
install.packages(i)
}
library(i, character.only = TRUE)
}
model.Longev<-lm(LONGEV~THORAX*Treatm, data=Fly) # create the model, with interaction.
qqPlot(model.Longev)
qqPlot(model.Longev$residuals)
ncvTest(model.Longev)
knitr::opts_chunk$set(echo = FALSE)
data(Ornstein)
library(ggplot2)
m <- ggplot(Ornstein, aes(x = assets))
m + geom_density( alpha=0.5,adjust=2, aes(fill=nation))+theme(legend.position="none") + labs(title="Log transformed data", x="Explanatory variable", y="Response variable")
m + geom_density( alpha=0.5,adjust=2,aes(fill=nation))+theme(legend.position="none")+scale_x_log10()+geom_rug() + labs(title="Log transformed data", x="Explanatory variable", y="log 10 Transformed response variable")
rm(Ornstein)
rm(m)
boxCox(LONGEV~THORAX*Treatm)
boxCox(LONGEV~THORAX*Treatm, data = Fly)
boxCox(Fly$LONGEV~Fly$THORAX*Fly$Treatm)
model.BC<-lm((LONGEV)^(1/3)~THORAX*Treatm, data=Fly)
qqPlot(model.BC)
ncvTest(model.BC)
ggplot(Fly, aes(THORAX, model.Longev$resid)) + geom_point(size=3)+ geom_abline(intercept = 0, slope = 0) +
facet_wrap(~ Treatm, ncol = 3) + labs(x="Thorax length")
ggplot(Fly, aes(THORAX, model.Longev$resid)) + geom_point(size=3)+ geom_abline(intercept = 0, slope = 0) +
facet_wrap(~ Treatm, ncol = 3) + labs(x="Thorax length")
ggplot(Fly, aes(THORAX, model.Longev$resid)) + geom_point(size=3)+ geom_abline(intercept = 0, slope = 0) +
facet_wrap(~ Treatm, ncol = 3) + labs(x="Thorax length")
ggplot(Fly, aes(THORAX, model.Longev$resid)) + geom_point(size=3)+ geom_abline(intercept = 0, slope = 0) +
facet_wrap(~ Treatm, ncol = 3) + labs(x="Thorax length")
ggplot(Fly, aes(THORAX, model.Longev$resid)) + geom_point(size=3)+ geom_abline(intercept = 0, slope = 0) +
facet_wrap(~ Treatm, ncol = 3) + labs(x="Thorax length") + ggtitle("Hetereoscedastic in Factor?")
pkgs <- c("tidyverse", "car", "nlme")
for (i in pkgs){
if (i %in% installed.packages() == FALSE){
install.packages(i)
}
library(i, character.only = TRUE)
}
model.fv1<-gls(LONGEV~THORAX + Treatm + THORAX:Treatm,
weights=varFixed(~THORAX), method="ML") # weights -> you tell which one is fixed, thorax is fixed the others might vary.
model.fv2<-gls(LONGEV~THORAX + Treatm + THORAX:Treatm,
weights=varIdent(form=~1|Treatm), method="ML") # everything is the smame but you will vary the slopes.
model.fv3<-gls(LONGEV~THORAX + Treatm + THORAX:Treatm,
weights=varComb(varIdent(form=~1|Treatm), varFixed(~THORAX) ), method="ML") #  Combine them both
model.fv1<-gls(LONGEV~THORAX + Treatm + THORAX:Treatm,
weights=varFixed(~THORAX), method="ML", data = Fly) # weights -> you tell which one is fixed, thorax is fixed the others might vary.
model.fv2<-gls(LONGEV~THORAX + Treatm + THORAX:Treatm,
weights=varIdent(form=~1|Treatm), method="ML", data = Fly) # everything is the smame but you will vary the slopes.
model.fv3<-gls(LONGEV~THORAX + Treatm + THORAX:Treatm,
weights=varComb(varIdent(form=~1|Treatm), varFixed(~THORAX) ), method="ML", data = Fly) #  Combine them both
AIC(model.fv1, model.fv2, model.fv3) # the smaller the number the better
car::qqPlot(resid(model.fv3, type = "normalized"))
car::qqPlot(resid(model.fv3))
car::qqPlot(resid(model.fv3, type = "normalized"))
?qqPlot
ggplot(Fly, aes(THORAX, model.Longev$resid)) + geom_point(size=3)+ geom_abline(intercept = 0, slope = 0) +
facet_wrap(~ Treatm, ncol = 3) + labs(x="Thorax length") + ggtitle("Hetereoscedastic in Factor?")
?facet_wrap
#Test normality for the models.
?qqPlot
car::qqPlot(resid(model.fv3, type = "normalized"))
car::qqPlot(model.fv3)
#Test normality for the models.
qqPlot(model.fv3$residuals)
#Test normality for the models.
qqPlot(model.fv1$residuals)
qqPlot(model.fv2$residuals)
qqPlot(model.fv3$residuals)
shapiro.test(model.fv1)
shapiro.test(model.fv1$residuals, model.fv2$residuals, model.fv3$residuals)
shapiro.test(model.fv1$residuals)
shapiro.test(model.fv2$residuals)
shapiro.test(model.fv3$residuals)
car::influenceIndexPlot(lm(resid(model.fv3, type = "normalized") ~ Fly$Treatm))
Anova(model.fv3)
summary(model.fv3)
Anova(model.fv3)
model.fv4<-gls(LONGEV~THORAX + Treatm,
weights=varComb(varIdent(form=~1|Treatm), varFixed(~THORAX) ), method="ML")
model.fv4<-gls(LONGEV~THORAX + Treatm,
weights=varComb(varIdent(form=~1|Treatm), varFixed(~THORAX) ), method="ML", data = Fly)
summary(model.fv4)
ncvTest(model.fv3)
ncvTest(lm(resid(model.fv3, type = "normalized") ~ Fly$Treatm))
ncvTest(lm(model.fv3$residuals ~ Fly$Treatm))
ncvTest(lm(resid(model.Longev, type = "normalized" ~ Fly$Treatm))
ncvTest(lm(resid(model.Longev, type = "normalized") ~ Fly$Treatm))
ncvTest(lm(resid(model.Longev, type = "normalized") ~ Fly$Treatm))
?resid
ncvTest(lm(resid(model.fv3, type = "normalized") ~ Fly$Treatm))
ncvTest(lm(resid(model.fv4, type = "normalized") ~ Fly$Treatm))
ncvTest(lm(resid(model.fv4) ~ Fly$Treatm))
ncvTest(lm(model.fv4$residuals ~ Fly$Treatm))
ncvTest(lm(model.fv3$residuals ~ Fly$Treatm))
ncvTest(lm(model.fv2$residuals ~ Fly$Treatm))
ncvTest(lm(model.fv1$residuals ~ Fly$Treatm))
ncvTest(lm(model.fv3$residuals ~ Fly$Treatm))
summary(model.fv4)
Anova(model.fv4)
TukeyHSD(model.fv4)
AIC(model.fv3, model.fv4)
AIC(model.fv1, model.fv2, model.fv3)
pkgs <- c("tidyverse", "car", "nlme", "emmeans")
for (i in pkgs){
if (i %in% installed.packages() == FALSE){
install.packages(i)
}
library(i, character.only = TRUE)
}
emmeans(model.fv4, pairwise ~ Treatm,  mode = "df.error"
)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
pkgs <- c("tidyverse", "car", "nlme", "emmeans")
for (i in pkgs){
if (i %in% installed.packages() == FALSE){
install.packages(i)
}
library(i, character.only = TRUE)
}
# Chunk 3
# Preparation of the data
Fly <- read.delim("C:\\Users\\Nick\\Desktop\\GLS_Lecture_Full\\GLS_Lecture_Full\\partridge.txt") # read in the data
Fly$Treatm<-factor(Fly$TREATMEN,
labels=c("Treatm 1","Treatm 2","Treatm 3",
"Treatm 4","Treatm 5")) # create new col with treatm1-5 for TREATMENT1-5
str(Fly)
ggplot(Fly, aes(THORAX, LONGEV, colour = Treatm)) +
geom_smooth(method = "lm", se = F, fullrange =T) +
geom_point(alpha = 0.5) +
theme_bw() +
ylab("Longevity in Days") +
xlab("Thorax lenght in cm") +
ggtitle("Fruitfly longevity data")
# Chunk 4
ggplot(Fly, aes(THORAX, LONGEV, colour = Treatm)) +
geom_smooth(method = "lm") +
geom_point() +
theme_bw() +
ylab("Longevity in Days") +
xlab("Thorax lenght in cm") +
ggtitle("Fruitfly longevity data") +
facet_wrap(Fly$Treatm, ncol = 2)
# Chunk 5
model.Longev<-lm(LONGEV~THORAX*Treatm, data=Fly) # create the model, with interaction.
qqPlot(model.Longev) # check normality
ncvTest(model.Longev) # check constant variance
# Chunk 6
data(Ornstein)
library(ggplot2)
m <- ggplot(Ornstein, aes(x = assets))
m + geom_density( alpha=0.5,adjust=2, aes(fill=nation))+
theme(legend.position="none") +
labs(title="Log transformed data", x="Explanatory variable", y="Response variable")
# Chunk 7
m + geom_density( alpha=0.5,adjust=2,aes(fill=nation))+
theme(legend.position="none")+
scale_x_log10()+geom_rug() +
labs(title="Log transformed data", x="Explanatory variable", y="log 10 Transformed response variable")
rm(Ornstein)
rm(m)
# Chunk 8
boxCox(Fly$LONGEV~Fly$THORAX*Fly$Treatm) # car package needed
# Chunk 9
model.BC<-lm((LONGEV)^(1/3)~THORAX*Treatm, data=Fly)
qqPlot(model.BC)
ncvTest(model.BC)
# Chunk 10
ggplot(Fly, aes(THORAX, model.Longev$resid)) + geom_point(size=3)+ geom_abline(intercept = 0, slope = 0) +
facet_wrap(~ Treatm, ncol = 3) + labs(x="Thorax length") + ggtitle("Hetereoscedastic in Factor?")
# Chunk 11
model.fv1<-gls(LONGEV~THORAX + Treatm + THORAX:Treatm,
weights=varFixed(~THORAX), method="ML", data = Fly) # weights -> you tell which one is fixed, thorax is fixed the others might vary.
model.fv2<-gls(LONGEV~THORAX + Treatm + THORAX:Treatm,
weights=varIdent(form=~1|Treatm), method="ML", data = Fly) # everything is the smame but you will vary the slopes. treatm stays the same leaving thorax length to vary.
model.fv3<-gls(LONGEV~THORAX + Treatm + THORAX:Treatm,
weights=varComb(varIdent(form=~1|Treatm), varFixed(~THORAX) ), method="ML", data = Fly) #  Combine them both
# Chunk 12
#Test normality for the models.
qqPlot(model.fv1$residuals)
qqPlot(model.fv2$residuals)
qqPlot(model.fv3$residuals)
shapiro.test(model.fv3$residuals)
ncvTest(lm(model.fv1$residuals ~ Fly$Treatm))
# Chunk 13
car::influenceIndexPlot(lm(resid(model.fv3, type = "normalized") ~ Fly$Treatm))
# Chunk 14
Anova(model.fv3)
# Chunk 15
model.fv4<-gls(LONGEV~THORAX + Treatm,
weights=varComb(varIdent(form=~1|Treatm), varFixed(~THORAX) ), method="ML", data = Fly)
AIC(model.fv3, model.fv4) # we chooce model 4
summary(model.fv4)
Anova(model.fv4)
emmeans(model.fv4, pairwise ~ Treatm,  mode = "df.error")
View(DATA)
library(car)
ncvTest(m)
ncvTest(m1)
m <- lm(Flower_mass ~ Treatment * Cultivar, data = DATA)
m1 <- lm(Flower_mass ~ Treatment + Cultivar, data = DATA)
ncvTest(m)
ncvTest(m1)
library(nlme)
m1_1 <- gls(Flower)
m1_1 <- gls(Flower_mass ~ Treatment * Cultivar, data = DATA, weights = varFixed(Treatment), method = "ML")
m1_1 <- gls(Flower_mass ~ Treatment * Cultivar, data = DATA, weights = varFixed(~Treatment), method = "ML")
m1_1 <- gls(Flower_mass ~ Treatment * Cultivar, data = DATA, weights = varIdent(form = ~1|Treatment), method = "ML")
ncvTest(lm(m1_1$residuals ~ DATA$Treatment))
summary(m1_1)
Anova(m1_1)
m1_2 <- gls(Flower_mass ~ Treatment + Cultivar, data = DATA, weights = varIdent(form = ~1|Treatment), method = "ML")
ncvTest(lm(m1_2$residuals ~ DATA$Treatment))
Anova(m1_2)
summary(m1_2)
summary.aov(m1)
3*8
choice(c(1:24))
choose(c(1:24))
?choose
?sample
sample(c(1:24))
24%% 19
sample(c(1:24), size = 1)
sample(c(1:24), size = 1)
19/3
ratings <- c(56174, 107557, 261197, 348971, 226310)
counts <- c(56174, 107557, 261197, 348971, 226310)
ratings <- c(1,2,3,4,5)
library(tidyverse)
df <- data.frame(ratings, counts)
View(df)
ggplot(df, aes(x = counts, y = ratings)) +
geom_bar(stat = 'identity')
ggplot(df, aes(x = ratings, y = counts)) +
geom_bar(stat = 'identity')
ggplot(df, aes(x = ratings, y = counts)) +
geom_bar(stat = 'identity', col = 'blue')
ggplot(df, aes(x = ratings, y = counts)) +
geom_bar(stat = 'identity', fill = 'blue')
ggplot(df, aes(x = ratings, y = counts)) +
geom_bar(stat = 'identity', fill = 'blue') +
geom_text(aes(label=counts))
ggplot(df, aes(x = ratings, y = counts)) +
geom_bar(stat = 'identity', fill = 'blue', position = 'dodge') +
geom_text(aes(label=counts))
ggplot(df, aes(x = ratings, y = counts)) +
geom_bar(stat = 'identity', fill = 'blue') +
geom_text(aes(label=counts), position = position_dodge(width = 0.9))
ggplot(df, aes(x = ratings, y = counts)) +
geom_bar(stat = 'identity', fill = 'blue') +
geom_text(aes(label=counts), vjust = -0.25)
ggplot(df, aes(x = ratings, y = counts)) +
geom_bar(stat = 'identity', fill = 'blue') +
geom_text(aes(label=counts), vjust = -0.25) +
ylab("Frequency") +
xlab("Rating") +
ggtitle("Frequency per rating") +
theme_classic()
ggsave("frequency.png", device = 'png', width = 159, height = 110, units = 'mm')
library(readr)
sales_train <- read_csv("D:/University/Master jaar 2/AiDM/Assignment 2/sales_train.csv")
View(sales_train)
library(readr)
sales_train <- read_csv("D:/University/Master jaar 2/AiDM/Assignment 2/sales_train.csv")
View(sales_train)
library(tidyverse)
summary(df)
summary(sales_train)
start <- Sys.time()
summary(sales_train)
end <- Sys.time()
print(end - start)
print(end)
df <- sales_train[sales_train$item_cnt_day < 0,]
View(DATA)
View(df)
table(df)
table(df$item_cnt_day)
length(df)
nrow(df)
nrow(df)/nrow(sales_train)*100
2928493 - 2935849
7252+78+14+3+4+2+1+1+1
wd "D:\University\Master jaar 2\AiDM\AiDM-assignment-2"
setwd("D:\University\Master jaar 2\AiDM\AiDM-assignment-2")
setwd("D:/University/Master jaar 2/AiDM/AiDM-assignment-2")
library(readr)
df <- read_csv("sales_train.csv")
View(df)
library(tidyverse)
View(df)
df_sales <- df %>% select(date_block_num, item_id, item_cnt_day)
View(df_sales)
df_sales %>% aggregate(formula = item_cnt_day ~., FUN = sum)
df_sales %>% aggregate(item_cnt_day ~., FUN = sum)
df_sales <- aggregate(item_cnt_day ~., data = df_sales, FUN = sum)
View(df_sales)
df_sales <- df_sales %>% group_by(date_block_num, item_id)
View(df_sales)
df_sales <- df_sales %>% group_by(item_id, date_block_num)
View(df_sales)
df_sales <- df %>% select(date_block_num, item_id, item_cnt_day)
df_sales <- aggregate(item_cnt_day ~ date_block_num, data = df_sales, FUN = sum)
ggplot(df_sales, aes(x = date_block_num, y = item_cnt_day)) +
geom_line()
ggplot(df_sales, aes(x = date_block_num, y = item_cnt_day)) +
geom_line() +
xlab("Items sold per month")
ggplot(df_sales, aes(x = date_block_num, y = item_cnt_day)) +
geom_line() +
ylab("Items sold per month")
df$date <- as.Date(df$date, format = "%d.%m.%Y")
df_sales <- df %>% select(date, item_id, item_cnt_day)
df_sales <- aggregate(item_cnt_day ~ date, data = df_sales, FUN = sum)
ggplot(df_sales, aes(x = date, y = item_cnt_day)) +
geom_line() +
ylab("Items sold per month")
df_month <- aggregate(item_cnt_day ~ Month, df_sales, sum)
df_sales$month <- months(df_sales$date)
df_sales <- df %>% select(date, item_id, item_cnt_day)
df_sales <- aggregate(item_cnt_day ~ date, data = df_sales, FUN = sum)
ggplot(df_sales, aes(x = date, y = item_cnt_day)) +
geom_smooth() +
ylab("Items sold per month")
ggplot(df_sales, aes(x = date, y = item_cnt_day)) +
geom_point() +
ylab("Items sold per month")
ggplot(df_sales, aes(x = date, y = item_cnt_day)) +
geom_line() +
ylab("Items sold per month")
df$date <- as.Date(df$date, format = "%d.%m.%Y")
df_sales <- df %>% select(date_block_num, item_id, item_cnt_day)
df_sales <- aggregate(item_cnt_day ~ date_block_num, data = df_sales, FUN = sum)
ggplot(df_sales, aes(x = date_block_num, y = item_cnt_day)) +
geom_line() +
ylab("Items sold per month")
ggplot(df_sales, aes(x = date_block_num, y = item_cnt_day)) +
geom_point() +
ylab("Items sold per month")
ggplot(df_sales, aes(x = date_block_num, y = item_cnt_day)) +
geom_smooth() +
ylab("Items sold per month")
ggplot(df_sales, aes(x = date_block_num, y = item_cnt_day)) +
geom_line() +
ylab("Items sold per month") +
xlab("Months") +
ggtitle("Monthly sales, month 0 = Jan 2013")
ggplot(df_sales, aes(x = date_block_num, y = item_cnt_day)) +
geom_line(col = 'blue') +
ylab("Items sold per month") +
xlab("Months") +
ggtitle("Monthly sales, month 0 = Jan 2013")
ggplot(df_sales, aes(x = date_block_num, y = item_cnt_day)) +
geom_line(col = 'blue') +
ylab("Items sold per month") +
xlab("Months") +
ggtitle("Monthly sales, month 0 = Jan 2013") +
theme_bw()
ggplot(df_sales, aes(x = date_block_num, y = item_cnt_day)) +
geom_line(col = 'blue') +
ylab("Items sold per month") +
xlab("Months") +
ggtitle("Monthly sales, month 0 = Jan 2013") +
theme_classic()
ggplot(df_sales, aes(x = date_block_num, y = item_cnt_day)) +
geom_line(col = 'blue', width = 3) +
ylab("Items sold per month") +
xlab("Months") +
ggtitle("Monthly sales, month 0 = Jan 2013") +
theme_classic()
?geom_line
ggplot(df_sales, aes(x = date_block_num, y = item_cnt_day)) +
geom_line(col = 'blue', size = 3) +
ylab("Items sold per month") +
xlab("Months") +
ggtitle("Monthly sales, month 0 = Jan 2013") +
theme_classic()
ggplot(df_sales, aes(x = date_block_num, y = item_cnt_day)) +
geom_line(col = 'blue', size = 1) +
ylab("Items sold per month") +
xlab("Months") +
ggtitle("Monthly sales, month 0 = Jan 2013") +
theme_classic()
